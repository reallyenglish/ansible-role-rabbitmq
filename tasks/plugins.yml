---

- name: Get plugins_dir from rabbitmqctl environment
  # XXX the python one-liner is to normalize output of rabbitmqctl. the output
  # differs under unknown (to me) conditions. sed(1) is tricky in this task as
  # you cannot use `\n`.
  # TODO the proper way to parse the output is to pipe it to erl, eval it, and
  # print the value of plugins_dir.
  shell: "rabbitmqctl environment | python -c \"import sys; import re; sys.stdout.write(re.sub('{plugins_dir,\\n', '{plugins_dir,', sys.stdin.read()))\" | grep plugins_dir | grep -oE '\"/.+\"' | cut -d ':' -f 2 | tr -d '\"'"
  register: register_rabbitmqctl_environment_plugins_dir
  changed_when: false

- set_fact:
    rabbitmq_plugins_dir: "{{ register_rabbitmqctl_environment_plugins_dir.stdout }}"

- name: Assert all elements in rabbitmq_plugins have either `enabled` or `disabled`
  assert:
    msg: elements in rabbitmq_plugins must have `state` attribute set to either `enabled` or `disabled`
    that:
      - "'state' in item"
      - item.state == 'enabled' or item.state == 'disabled'
  with_items: "{{ rabbitmq_plugins }}"

- set_fact:
    # TODO remove equalto.py from `test_plgins`. see #9
    rabbitmq_plugins_enable:  "{{ rabbitmq_plugins | selectattr('state', 'equalto', 'enabled')  | list }}"

- set_fact:
    rabbitmq_plugins_disable: "{{ rabbitmq_plugins | selectattr('state', 'equalto', 'disabled') | list }}"

- name: Get stat of rabbitmq_plugins_dir
  stat:
    path: "{{ rabbitmq_plugins_dir }}"
  register: register_rabbitmq_plugins_dir_stat

- name: Assert rabbitmq_plugins_dir is directory
  assert:
    that: register_rabbitmq_plugins_dir_stat.stat.isdir

- name: Copy plugins to `plugins` directory from _local_ rabbitmq_plugins_local_src_dir
  # XXX this task is not tested in serverspec, but in integration test
  copy:
    src: "{{ rabbitmq_plugins_local_src_dir }}/"
    dest: "{{ rabbitmq_plugins_dir }}"
  when:
    - rabbitmq_plugins_local_src_dir is defined
    - rabbitmq_plugins_local_src_dir | length > 0

- name: Enable plugins
  rabbitmq_plugin:
    names: "{{ rabbitmq_plugins_enable  | map(attribute = 'name') | join(',') }}"
  when: rabbitmq_plugins_enable | length > 0

- name: Disable plugins
  rabbitmq_plugin:
    names: "{{ rabbitmq_plugins_disable | map(attribute = 'name') | join(',') }}"
  when: rabbitmq_plugins_disable | length > 0

- name: Get list of enabled plugins
  shell: "rabbitmq-plugins -E list | grep -E '^\\[' | cut -f 2 -d ' '"
  register: register_rabbitmq_plugins_list_e
  changed_when: false

- name: Assert plug-ins with `state` enabled in rabbitmq_plugins are enabled
  assert:
    that:
      - item.name in register_rabbitmq_plugins_list_e.stdout_lines
  with_items: "{{ rabbitmq_plugins_enable }}"
  when:
    - rabbitmq_plugins_enable | length > 0

- name: Assert plug-ins with `state` disabled in rabbitmq_plugins are disabled
  assert:
    that:
      - ! item.name in register_rabbitmq_plugins_list_e.stdout_lines
  with_items: "{{ rabbitmq_plugins_disable }}"
  when:
    - rabbitmq_plugins_disable | length > 0
