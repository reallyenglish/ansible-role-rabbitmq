---
# tasks file for ansible-role-rabbitmq

- include_vars: "{{ ansible_os_family }}.yml"

- set_fact:
    rabbitmq_flags_merged: "{{ rabbitmq_flags_default | combine(rabbitmq_flags) }}"

- include: "install-{{ ansible_os_family }}.yml"

- include: "configure-{{ ansible_os_family }}.yml"

- name: Create log directory
  file:
    path: "{{ rabbitmq_log_dir }}"
    mode: 0755
    owner: "{{ rabbitmq_user }}"
    group: "{{ rabbitmq_group }}"
    state: directory

- name: Create db directory
  file:
    path: "{{ rabbitmq_db_dir }}"
    mode: 0755
    owner: "{{ rabbitmq_user }}"
    group: "{{ rabbitmq_group }}"
    state: directory

- include: cookie.yml

- name: Create rabbitmq config dir
  file:
    state: directory
    path: "{{ rabbitmq_conf_dir }}"
    mode: 0755
    owner: "{{ rabbitmq_user }}"
    group: "{{ rabbitmq_group }}"

- name: Create rabbitmq.conf
  template:
    src: rabbitmq.config.j2
    dest: "{{ rabbitmq_conf }}"
  notify: Restart rabbitmq

- name: Create rabbitmq-env.conf
  template:
    src: rabbitmq-env.conf.j2
    dest: "{{ rabbitmq_env_conf }}"
    validate: sh -n %s
    owner: "{{ rabbitmq_user }}"
    group: "{{ rabbitmq_group }}"
  notify: Restart rabbitmq

- name: Start rabbitmq
  service:
    name: "{{ rabbitmq_service }}"
    enabled: true
    state: started

- name: Enable rabbitmq_management
  rabbitmq_plugin:
    names: "rabbitmq_management"
    state: enabled
  register: register_rabbitmq_management_plugin

- name: Restart rabbitmq when rabbitmq_management plug-in is enabled
  service:
    name: "{{ rabbitmq_service }}"
    state: restarted
  when:
    - register_rabbitmq_management_plugin.changed
    # XXX plug-ins are not immediately enabled on RedHat. probably not related
    # to platform, but rabbitmq's version. without this, the test fails when
    # getting cluster name from API.
    - ansible_os_family == 'RedHat'

- name: Create a management user
  rabbitmq_user:
    name: "{{ rabbitmq_management_user.name }}"
    password: "{{ rabbitmq_management_user.password }}"
    vhost: /
    tags: "management"
  when:
    - "'create' in rabbitmq_management_user"
    - rabbitmq_management_user.create

- include: plugins.yml

- name: Create vhosts
  rabbitmq_vhost:
    name: "{{ item }}"
    state: present
  with_items: "{{ rabbitmq_vhosts }}"

- name: Create or remove users
  rabbitmq_user:
    name: "{{ item.name }}"
    password: "{{ item.password | default() }}"
    state: "{{ item.state }}"
    tags: "{{ item.tags | default() }}"
    permissions: "{{ item.permissions | default('[]') }}"
    vhost: "{{ item.vhost | default() }}"
    configure_priv: "{{ item.configure_priv | default() }}"
    write_priv: "{{ item.write_priv | default() }}"
    read_priv: "{{ item.read_priv | default() }}"
  with_items: "{{ rabbitmq_users }}"

- include: configure-cluster.yml
  when:
    - rabbitmq_cluster_enable
